{"version":3,"sources":["components/Themes.js","globalStyles.js","App.js","UI/Loading.js","index.js"],"names":["lightTheme","body","text","fontFamily","bodyRgba","textRgba","DarkTheme","mediaQueries","key","style","GlobalStyle","createGlobalStyle","Home","lazy","About","Skills","Works","Error","SoundBar","AppContext","createContext","App","location","useLocation","useState","clickSpinner","setClickSpinner","path","setPath","mq","window","matchMedia","matches","Provider","value","handleClick","theme","fallback","Loading","AnimatePresence","exitBeforeEnter","exact","process","element","pathname","Wrapper","styled","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHAAA,sGAAO,IAAMA,EAAa,CACxBC,KAAM,UACNC,KAAM,UACNC,WAAY,gCACZC,SAAU,gBACVC,SAAU,SAICC,EAAY,CACvBL,KAAM,UACNC,KAAM,UACNC,WAAY,gCACZE,SAAU,gBACVD,SAAU,SAYCG,EAAe,SAAAC,GAC1B,OAAO,SAAAC,GAAK,mCAA0BD,EAA1B,iBAAsCC,EAAtC,S,mHCNCC,EAnBKC,YAAH,4Q,uBCMXC,EAAOC,gBAAK,kBAAM,6EAClBC,EAAQD,gBAAK,kBAAM,wDACnBE,EAASF,gBAAK,kBAAM,+DACpBG,EAAQH,gBAAK,kBAAM,sEACnBI,EAAQJ,gBAAK,kBAAM,gEAEnBK,EAAWL,gBAAK,kBAAM,kCAEfM,EAAaC,wBAAc,IAoCzBC,IAlCf,WACE,IAAMC,EAAWC,cAEjB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAKC,OAAOC,WAAW,qBAAqBC,QAElD,OACE,eAACb,EAAWc,SAAZ,CAAqBC,MAAO,CAAEC,YAPZ,kBAAMT,GAAiBD,IAOEC,kBAAiBD,eAAcE,OAAMC,UAASC,MAAzF,UAEE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAeO,MAAOpC,IAAtB,SACE,eAAC,WAAD,CAAUqC,SAAU,cAACC,EAAA,EAAD,IAApB,UACE,cAACpB,EAAD,IACA,cAACqB,EAAA,EAAD,CAAiBC,iBAAe,EAAhC,SACE,eAAC,IAAD,CAAQlB,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAOmB,OAAK,EAACd,KAAMe,oBAA8BC,QAAS,cAAC/B,EAAD,MAC1D,cAAC,IAAD,CAAO6B,OAAK,EAACd,KAAMe,yBAAmCC,QAAS,cAAC7B,EAAD,MAC/D,cAAC,IAAD,CAAO2B,OAAK,EAACd,KAAMe,0BAAoCC,QAAS,cAAC5B,EAAD,MAChE,cAAC,IAAD,CAAO0B,OAAK,EAACd,KAAMe,yBAAmCC,QAAS,cAAC3B,EAAD,MAC/D,cAAC,IAAD,CAAOyB,OAAK,EAACd,KAAK,IAAIgB,QAAS,cAAC1B,EAAD,QALAK,EAASsB,sB,kECnChDC,EAAUC,IAAOC,IAAV,qQAmBET,IARC,WACd,OACE,cAACO,EAAD,UACE,gD,gCCjBN,2EAOAG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.eb10216f.chunk.js","sourcesContent":["export const lightTheme = {\r\n  body: \"#FCF6F4\",\r\n  text: \"#000000\",\r\n  fontFamily: \"'Source Sans Pro', sans-serif\",\r\n  bodyRgba: \"252, 246, 244\",\r\n  textRgba: \"0,0,0\",\r\n\r\n}\r\n\r\nexport const DarkTheme = {\r\n  body: \"#000000\",\r\n  text: \"#FCF6F4\",\r\n  fontFamily: \"'Source Sans Pro', sans-serif\",\r\n  textRgba: \"252, 246, 244\",\r\n  bodyRgba: \"0,0,0\",\r\n\r\n}\r\n\r\nexport const breakpoints = {\r\n  sm: 20,//em\r\n  md: 30,\r\n  lg: 45,\r\n  xl: 60,\r\n  xxl: 75,\r\n}\r\n\r\nexport const mediaQueries = key => {\r\n  return style => `@media (max-width: ${key}em) { ${style} }`\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*,*::before,*::after,h1,h2,h3,h4,h5,h6{\r\nmargin:0;\r\npadding:0;\r\n}\r\n\r\nh1,h2,h3,h4,h5,h6{\r\ndisplay:inline-block;\r\n\r\n}\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow-x:hidden;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import { Routes, Route, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { lazy, Suspense, createContext, useState } from \"react\";\r\nimport GlobalStyle from \"./globalStyles\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme } from \"./components/Themes\";\r\nimport Loading from \"./UI/Loading\";\r\n\r\nconst Home = lazy(() => import(\"./pages/Home\"));\r\nconst About = lazy(() => import(\"./pages/About\"));\r\nconst Skills = lazy(() => import(\"./pages/Skills\"));\r\nconst Works = lazy(() => import(\"./pages/Works\"));\r\nconst Error = lazy(() => import(\"./pages/Error\"));\r\n\r\nconst SoundBar = lazy(() => import(\"./UI/SoundBar\"));\r\n\r\nexport const AppContext = createContext({});\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n\r\n  const [clickSpinner, setClickSpinner] = useState(false);\r\n\r\n  const handleClick = () => setClickSpinner(!clickSpinner);\r\n\r\n  const [path, setPath] = useState(\"\");\r\n\r\n  const mq = window.matchMedia(\"(max-width: 50em)\").matches;\r\n\r\n  return (\r\n    <AppContext.Provider value={{ handleClick, setClickSpinner, clickSpinner, path, setPath, mq }}>\r\n\r\n      <GlobalStyle />\r\n\r\n      <ThemeProvider theme={lightTheme}>\r\n        <Suspense fallback={<Loading />}>\r\n          <SoundBar />\r\n          <AnimatePresence exitBeforeEnter>\r\n            <Routes location={location} key={location.pathname}>\r\n              <Route exact path={process.env.PUBLIC_URL + '/'} element={<Home />} />\r\n              <Route exact path={process.env.PUBLIC_URL + '/about'} element={<About />} />\r\n              <Route exact path={process.env.PUBLIC_URL + '/skills'} element={<Skills />} />\r\n              <Route exact path={process.env.PUBLIC_URL + '/works'} element={<Works />} />\r\n              <Route exact path=\"*\" element={<Error />} />\r\n            </Routes>\r\n          </AnimatePresence>\r\n        </Suspense>\r\n      </ThemeProvider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgb(30,30,31);\r\n  background: linear-gradient(90deg, rgba(30,30,31,1) 0%, rgba(65,63,66,1) 50%);\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Wrapper>\r\n      <h1>Loading...</h1>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport '../node_modules/normalize.css'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}